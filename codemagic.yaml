workflows:
  android_mvp:
    name: Android MVP
    instance_type: mac_mini_m2
    environment:
      flutter: stable

    scripts:
      # 1) Fresh Android scaffold so android/app/build.gradle always exists
      - name: Prepare Android project (fresh scaffold)
        script: |
          set -e
          flutter --version
          ls -la
          rm -rf android
          flutter create --platforms=android --template=app .
          echo "---- ANDROID TREE (top) ----"
          ls -la android
          echo "---- ANDROID APP (top) ----"
          ls -la android/app

      # 2) Fetch Dart/Flutter packages
      - name: Get packages
        script: flutter pub get

      # 3) (Optional) Inject google-services.json from Codemagic env var
      #    -> In Codemagic UI, set a Secure env var named GOOGLE_SERVICES_JSON_B64
      - name: Provide google-services.json (optional)
        script: |
          if [ -n "$GOOGLE_SERVICES_JSON_B64" ]; then
            echo "$GOOGLE_SERVICES_JSON_B64" | base64 --decode > android/app/google-services.json
            echo "google-services.json written to android/app/"
            head -n 3 android/app/google-services.json || true
          else
            echo "No GOOGLE_SERVICES_JSON_B64 provided; continuing without it."
          fi

      # 4) ðŸ”¹ Generate lib/firebase_options.dart (from JSON or write a dummy so build compiles)
      - name: Generate lib/firebase_options.dart (from JSON or fallback)
        script: |
          mkdir -p lib
          if [ -f android/app/google-services.json ]; then
            echo "Found google-services.json â†’ generating firebase_options.dart"
            python3 -c "
import json, os
d=json.load(open('android/app/google-services.json'))
pi=d.get('project_info',{})
project_id=pi.get('project_id','')
project_number=pi.get('project_number','')
storage_bucket=pi.get('storage_bucket','')
client=(d.get('client') or [{}])[0]
app_id=client.get('client_info',{}).get('mobilesdk_app_id','')
api_key=(client.get('api_key') or [{}])[0].get('current_key','')
dart=f'''// GENERATED by CI from google-services.json
import 'package:firebase_core/firebase_core.dart';
class DefaultFirebaseOptions {{
  static FirebaseOptions get currentPlatform => const FirebaseOptions(
    apiKey: '{api_key}',
    appId: '{app_id}',
    messagingSenderId: '{project_number}',
    projectId: '{project_id}',
    storageBucket: '{storage_bucket}',
  );
}}
'''
open('lib/firebase_options.dart','w').write(dart)
print('Wrote lib/firebase_options.dart')
"
          else
            echo "No google-services.json present â†’ writing dummy firebase_options.dart so build compiles"
            cat > lib/firebase_options.dart <<'DART'
import 'package:firebase_core/firebase_core.dart';
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform => const FirebaseOptions(
    apiKey: 'DUMMY',
    appId: '1:000000000000:android:dummy',
    messagingSenderId: '000000000000',
    projectId: 'dummy-project',
    storageBucket: 'dummy.appspot.com',
  );
}
DART
          fi
          echo "Preview of lib/firebase_options.dart:"
          head -n 20 lib/firebase_options.dart || true

      # 5) Build APK
      - name: Build Debug APK
        script: |
          set -e
          flutter clean
          flutter build apk --debug

    artifacts:
      - build/app/outputs/flutter-apk/*.apk
