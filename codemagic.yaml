workflows:
  android_mvp:
    name: Android MVP
    instance_type: mac_mini_m2
    environment:
      flutter: stable

    scripts:
      - name: Prepare Android project (fresh scaffold)
        script: |
          set -e
          flutter --version
          rm -rf android
          flutter create --platforms=android --template=app .
          echo "---- ANDROID TREE (top) ----"
          ls -la android
          echo "---- ANDROID APP (top) ----"
          ls -la android/app

      - name: Get packages
        script: |
          flutter pub get

      - name: Provide google-services.json (optional)
        script: |
          if [ -n "$GOOGLE_SERVICES_JSON_B64" ]; then
            echo "$GOOGLE_SERVICES_JSON_B64" | base64 --decode > android/app/google-services.json
            echo "google-services.json written to android/app/"
            head -n 3 android/app/google-services.json || true
          else
            echo "No GOOGLE_SERVICES_JSON_B64 set; continuing."
          fi

      - name: Generate lib/firebase_options.dart (from JSON or fallback)
        script: |
          set -e
          mkdir -p lib
          if [ -f android/app/google-services.json ]; then
            echo "Generating firebase_options.dart from google-services.json"
            python3 <<'PYCODE'
import json, os
with open("android/app/google-services.json") as f:
    d = json.load(f)

pi = d.get("project_info",{}) or {}
project_id = pi.get("project_id","")
project_number = pi.get("project_number","")
storage_bucket = pi.get("storage_bucket","")

client = (d.get("client") or [{}])[0]
app_id = (client.get("client_info") or {}).get("mobilesdk_app_id","")
api_key = (client.get("api_key") or [{}])[0].get("current_key","")

dart = f"""// GENERATED by CI from google-services.json
import 'package:firebase_core/firebase_core.dart';

class DefaultFirebaseOptions {{
  static FirebaseOptions get currentPlatform => const FirebaseOptions(
    apiKey: '{api_key}',
    appId: '{app_id}',
    messagingSenderId: '{project_number}',
    projectId: '{project_id}',
    storageBucket: '{storage_bucket}',
  );
}}
"""
os.makedirs("lib", exist_ok=True)
open("lib/firebase_options.dart","w").write(dart)
print("Wrote lib/firebase_options.dart")
PYCODE
          else
            echo "No google-services.json found; writing dummy firebase_options.dart so build compiles"
            cat > lib/firebase_options.dart <<'DART'
import 'package:firebase_core/firebase_core.dart';

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform => const FirebaseOptions(
    apiKey: 'DUMMY',
    appId: '1:000000000000:android:dummy',
    messagingSenderId: '000000000000',
    projectId: 'dummy-project',
    storageBucket: 'dummy.appspot.com',
  );
}
DART
          fi
          echo "Preview:"
          head -n 20 lib/firebase_options.dart || true

      - name: Build Debug APK
        script: |
          set -e
          flutter clean
          flutter build apk --debug

    artifacts:
      - build/app/outputs/flutter-apk/*.apk
