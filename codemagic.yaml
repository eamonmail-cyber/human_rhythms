workflows:
  android_mvp:
    name: Android MVP (no gradle patch)
    instance_type: mac_mini_m2
    environment:
      flutter: stable
      vars:
        JAVA_TOOL_OPTIONS: "-Xmx3g"

    scripts:
      - name: Check repo
        script: |
          pwd
          ls -la
          test -f pubspec.yaml || (echo "ERROR: pubspec.yaml not found"; exit 1)

      - name: Flutter version / doctor
        script: |
          flutter --version
          flutter doctor -v || true

      - name: Get packages
        script: flutter pub get

      # Try normal create first; if app scaffold still missing, force-create as app
      - name: Ensure Android/iOS scaffolds
        script: |
          echo "Attempt 1: flutter create ."
          flutter create . || true

          if [ ! -f android/app/build.gradle ]; then
            echo "android/app/build.gradle still missing -> force app template"
            rm -rf android
            flutter create --platforms=android --template=app .
          fi

          if [ ! -d ios ]; then
            echo "iOS missing -> create"
            flutter create --platforms=ios --template=app .
          fi

          echo "--- ANDROID TREE ---"
          ls -R android || true

      - name: Add INTERNET permission (best effort)
        script: |
          MANIFEST=android/app/src/main/AndroidManifest.xml
          if [ -f "$MANIFEST" ]; then
            if ! grep -q 'uses-permission android:name="android.permission.INTERNET"' "$MANIFEST"; then
              sed -i.bak 's|<application|<uses-permission android:name="android.permission.INTERNET" />\n    <application|' "$MANIFEST" || true
              echo "Injected INTERNET permission."
            else
              echo "INTERNET permission already present."
            fi
          else
            echo "WARN: AndroidManifest not found (will continue)."
          fi

      - name: Provide google-services.json (optional)
        script: |
          if [ -n "$GOOGLE_SERVICES_JSON_B64" ]; then
            echo "$GOOGLE_SERVICES_JSON_B64" | base64 --decode > android/app/google-services.json
            echo "google-services.json written to android/app/"
            head -n 3 android/app/google-services.json || true
          else
            echo "No GOOGLE_SERVICES_JSON_B64 provided; skipping Firebase file."
          fi

      - name: Build Debug APK
        script: |
          flutter clean
          flutter build apk --debug

    artifacts:
      - build/app/outputs/flutter-apk/*.apk
