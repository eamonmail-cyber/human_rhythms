workflows:
  android_mvp:
    name: Android MVP
    environment:
      flutter: stable
      # If your env var lives inside a Codemagic "group", uncomment and put the group name below:
      # groups:
      #   - firebase_secrets

    scripts:
      - name: Install dependencies
        script: flutter pub get

      - name: Restore google-services.json (robust Python decode + verify)
        script: |
          set -e
          if [ -z "${GOOGLE_SERVICES_JSON_B64:-}" ]; then
            echo "❌ GOOGLE_SERVICES_JSON_B64 not set in Codemagic Environment variables"
            exit 1
          fi
          mkdir -p android/app
          python3 - <<'PY'
import os, base64, sys, pathlib, json
b64 = os.environ.get("GOOGLE_SERVICES_JSON_B64","")
try:
    data = base64.b64decode(b64, validate=True)
except Exception as e:
    print(f"[ERROR] base64 decode failed: {e}", file=sys.stderr); sys.exit(2)
pathlib.Path("android/app").mkdir(parents=True, exist_ok=True)
with open("android/app/google-services.json","wb") as f:
    f.write(data)
print("[OK] wrote android/app/google-services.json (", len(data), "bytes )")
# quick JSON sanity (won't print secrets)
try:
    j = json.loads(data.decode("utf-8"))
    print("[OK] parsed JSON with keys:", list(j.keys())[:3])
except Exception as e:
    print("[WARN] JSON parse failed:", e)
PY
          echo "Preview:"
          head -n 3 android/app/google-services.json || true

      - name: Generate firebase_options.dart
        script: |
          set -e
          python3 scripts/gen_firebase_options.py
          test -f lib/main/script/firebase_options.dart || (echo "❌ lib/main/script/firebase_options.dart not generated" && exit 1)
          echo "✅ Generated lib/main/script/firebase_options.dart"
          head -n 12 lib/main/script/firebase_options.dart || true

      - name: Build Debug APK
        script: |
          set -e
          flutter clean
          flutter build apk --debug

    artifacts:
      - build/app/outputs/flutter-apk/*.apk
