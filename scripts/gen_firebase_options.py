#!/usr/bin/env python3
"""
gen_firebase_options.py
Reads android/app/google-services.json and writes:
lib/main/script/firebase_options.dart
"""

import json, os, sys, pathlib

IN_PATH = "android/app/google-services.json"
OUT_PATH = "lib/main/script/firebase_options.dart"

def main():
    if not os.path.exists(IN_PATH):
        print(f"❌ {IN_PATH} not found.", file=sys.stderr)
        sys.exit(1)

    with open(IN_PATH, "r", encoding="utf-8") as f:
        data = json.load(f)

    project_info = data.get("project_info", {}) or {}
    project_id = project_info.get("project_id", "")
    project_number = project_info.get("project_number", "")
    storage_bucket = project_info.get("storage_bucket", "")

    client = (data.get("client") or [{}])[0]
    app_id = (client.get("client_info") or {}).get("mobilesdk_app_id", "")
    api_key = (client.get("api_key") or [{}])[0].get("current_key", "")

    dart = f"""// GENERATED by gen_firebase_options.py
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;

class DefaultFirebaseOptions {{
  static FirebaseOptions get currentPlatform {{
    return const FirebaseOptions(
      apiKey: '{api_key}',
      appId: '{app_id}',
      messagingSenderId: '{project_number}',
      projectId: '{project_id}',
      storageBucket: '{storage_bucket}',
    );
  }}
}}
"""
    pathlib.Path(os.path.dirname(OUT_PATH)).mkdir(parents=True, exist_ok=True)
    with open(OUT_PATH, "w", encoding="utf-8") as out:
        out.write(dart)
    print(f"✅ Wrote {OUT_PATH}")

if __name__ == "__main__":
    main()
